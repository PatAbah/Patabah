class t{constructor(){this.bankInput=document.getElementById("bank-name"),this.bankList=null,this.suggestionsContainer=null,this.errorElement=null,this.debounceTimer=null,this.init()}async init(){this.createSuggestionsContainer(),this.createErrorElement(),await this.loadBankData(),this.addEventListeners()}createSuggestionsContainer(){this.suggestionsContainer=document.createElement("div"),this.suggestionsContainer.className="suggestions-container",this.suggestionsContainer.style.display="none",this.bankInput.parentNode.appendChild(this.suggestionsContainer)}createErrorElement(){this.errorElement=document.createElement("div"),this.errorElement.className="error-message",this.errorElement.style.cssText="\n            color: var(--error-color);\n            font-size: var(--font-size-sm);\n            margin-bottom: var(--spacing-sm);\n            display: none;\n        ",this.bankInput.parentNode.insertBefore(this.errorElement,this.bankInput)}async loadBankData(){try{const t=await fetch("/get-banks");if(!t.ok)throw new Error("Failed to load bank data");this.bankList=await t.json(),console.log("Bank data loaded successfully")}catch(t){console.error("Error loading bank data:",t),this.bankList={}}}addEventListeners(){this.bankInput.addEventListener("input",t=>{this.handleInput(t.target.value)}),this.bankInput.addEventListener("focus",()=>{this.bankInput.value.length>=2&&this.showSuggestions(this.bankInput.value),this.hideError()}),this.bankInput.addEventListener("blur",()=>{setTimeout(()=>{this.validateBankInput(),this.hideSuggestions()},200)}),this.bankInput.addEventListener("keydown",t=>{this.handleKeyNavigation(t),window.scrollTo(0,document.body.scrollHeight)}),document.addEventListener("click",t=>{this.bankInput.contains(t.target)||this.suggestionsContainer.contains(t.target)||this.hideSuggestions()})}handleInput(t){clearTimeout(this.debounceTimer),this.hideError(),t.length<2?this.hideSuggestions():this.debounceTimer=setTimeout(()=>{this.showSuggestions(t)},300)}showSuggestions(t){if(!this.bankList||0===Object.keys(this.bankList).length)return;const e=this.getFilteredSuggestions(t);0!==e.length?(this.suggestionsContainer.innerHTML="",e.forEach(t=>{const e=document.createElement("div");e.className="suggestion-item",e.textContent=t,e.addEventListener("mousedown",e=>{e.preventDefault(),this.selectSuggestion(t)}),e.addEventListener("mouseenter",()=>{this.highlightSuggestion(e)}),this.suggestionsContainer.appendChild(e)}),this.suggestionsContainer.style.display="block"):this.hideSuggestions()}getFilteredSuggestions(t){const e=t.toLowerCase();return Object.keys(this.bankList).filter(t=>t.toLowerCase().includes(e)).slice(0,10)}hideSuggestions(){this.suggestionsContainer.style.display="none"}selectSuggestion(t){this.bankInput.value=t,this.hideSuggestions(),this.hideError(),this.bankInput.dispatchEvent(new Event("input",{bubbles:!0}))}highlightSuggestion(t){this.suggestionsContainer.querySelectorAll(".suggestion-item").forEach(t=>{t.style.backgroundColor=""}),t.style.backgroundColor="var(--secondary-color)"}handleKeyNavigation(t){const e=this.suggestionsContainer.querySelectorAll(".suggestion-item"),n=this.suggestionsContainer.querySelector('.suggestion-item[style*="background-color"]');let s=Array.from(e).indexOf(n);switch(t.key){case"ArrowDown":t.preventDefault(),s=(s+1)%e.length,this.highlightSuggestion(e[s]);break;case"ArrowUp":t.preventDefault(),s=s<=0?e.length-1:s-1,this.highlightSuggestion(e[s]);break;case"Enter":t.preventDefault(),n&&this.selectSuggestion(n.textContent);break;case"Escape":this.hideSuggestions()}}validateBankInput(){const t=this.bankInput.value.trim();if(!t)return this.hideError(),!0;return this.bankList&&Object.keys(this.bankList).some(e=>e.toLowerCase()===t.toLowerCase())?(this.hideError(),!0):(this.showError("Please select a valid bank from the suggestions. Your input was not found in our records."),!1)}showError(t){this.errorElement.textContent=t,this.errorElement.style.display="block",this.bankInput.style.borderColor="var(--error-color)"}hideError(){this.errorElement.style.display="none",this.bankInput.style.borderColor=""}validate(){return this.validateBankInput()}getBankCode(){const t=this.bankInput.value.trim();return this.bankList?this.bankList[t]:null}}document.addEventListener("DOMContentLoaded",function(){new t});